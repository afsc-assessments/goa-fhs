aic
}
# if(!exists(dir(here("data","ageing_error",'real_data'))) dir.create("real_data", showWarnings=FALSE)
## Full bias and sigma terms
aic1 <- run_model(sig=rep(2, n.readers), bias=rep(2, n.readers),modname = 'aic1')
aic2 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=rep(2, n.readers),modname = 'aic2')
## Single bias term, full sigma
aic3 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=rep(2, n.readers),modname = 'aic3')
## Single sigma and bias term
aic4 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),modname = 'aic4')
## Single sigma and no bias term but with spline
aic5 <- run_model(sig=c(5,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=c(0,-1,-2,-3,-4,-5,-6,-7,-8,-9),
knotages=rep(list(c(1,4,8,12,16)),10),modname = 'aic5')
## Ian S recommends no bias and pooled readers
## Single sigma and bias term
aic6 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=c(0,-1,-2,-3,-4,-5,-6,-7,-8,-9),modname = 'aic6')
### This uses the pooled data
aic1p <- run_model(sig=c(2,-1), bias=c(2,-1), dat=dat2.mat,modname = 'aic1p')
aic2p <- run_model(sig=c(2,-1), bias=c(0,0), dat=dat2.mat,modname = 'aic2p')
aic3p <- run_model(sig=c(1,-1), bias=c(0,0), dat=dat2.mat,modname = 'aic3p')
aic4p <- run_model(sig=c(5,-1), bias=c(0,0),
rep(list(c(1,4,8,12,16, 20)),2),
dat=dat2.mat,modname = 'aic4p')
aicsp <- c(aic1p, aic2p, aic3p, aic4p)
## To simplify code a bit write a quick wrapper fn
run_model <- function(sig, bias, knotages=NULL, dat=dat.mat, modname = 'mod1'){
## Dummy values when not using feature
if(is.null(knotages)) knotages <- rep(list(c(2,8, 15,25)), times=length(sig))
savehere = here("data", "ageing_error","real_data", modname)
dir.create(savehere)
RunFn(Data=dat,
SigOpt=sig, BiasOpt=bias, KnotAges=knotages,
NDataSets=1, MinAge=1, MaxAge=29, RefAge=10,
MinusAge=1, PlusAge=21,
# SaveFile='real_data',
SaveFile=savehere,
AdmbFile= here("data", "ageing_error"),
# AdmbFile=system.file("executables", package="nwfscAgeingError"),
EffSampleSize=0)
# setwd("c:/Users/cole.monnahan/Work/assessments/GOA_flathead/2021_GOA_flathead/ageing_error")
aic <- calc.aic(here("data","ageing_error",'real_data'), dat)
PlotOutputFn(Data = dat2.mat, MaxAge = 29,
SaveFile = savehere,  PlotType = "PNG")
aic
}
# if(!exists(dir(here("data","ageing_error",'real_data'))) dir.create("real_data", showWarnings=FALSE)
## Full bias and sigma terms
aic1 <- run_model(sig=rep(2, n.readers), bias=rep(2, n.readers),modname = 'aic1')
## Single sigma term, full bias
aic2 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=rep(2, n.readers),modname = 'aic2')
## Single bias term, full sigma
aic3 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=rep(2, n.readers),modname = 'aic3')
## Single sigma and bias term
aic4 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),modname = 'aic4')
## Single sigma and no bias term but with spline
aic5 <- run_model(sig=c(5,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=c(0,-1,-2,-3,-4,-5,-6,-7,-8,-9),
knotages=rep(list(c(1,4,8,12,16)),10),modname = 'aic5')
## Ian S recommends no bias and pooled readers
## Single sigma and bias term
aic6 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=c(0,-1,-2,-3,-4,-5,-6,-7,-8,-9),modname = 'aic6')
aics <- c(aic1, aic2, aic3, aic4, aic5, aic6)
aics-min(aics)
which.min(aics) ## this is the single sigma and bias term
PlotOutputFn(Data = dat.mat, MaxAge = 29,
SaveFile = 'real_data', PlotType = "PNG")
### This uses the pooled data
aic1p <- run_model(sig=c(2,-1), bias=c(2,-1), dat=dat2.mat,modname = 'aic1p')
aic2p <- run_model(sig=c(2,-1), bias=c(0,0), dat=dat2.mat,modname = 'aic2p')
aic3p <- run_model(sig=c(1,-1), bias=c(0,0), dat=dat2.mat,modname = 'aic3p')
aic4p <- run_model(sig=c(5,-1), bias=c(0,0),
rep(list(c(1,4,8,12,16, 20)),2),
dat=dat2.mat,modname = 'aic4p')
aicsp <- c(aic1p, aic2p, aic3p, aic4p)
aicsp-min(aicsp)
which.min(aicsp)
?RunFn
pivot_wider(dat.long, fish_id, names_from='reader',
values_from='age')
dat.long
unique(dat.long$name)
dat2.wide
=c(0,0),
rep(list(c(1,4,8,12,16, 20)),2)
which.min(aicsp)
### This uses the pooled data
aic1p <- run_model(sig=c(2,-1), bias=c(2,-1), dat=dat2.mat,modname = 'aic1p')
aic2p <- run_model(sig=c(2,-1), bias=c(0,0), dat=dat2.mat,modname = 'aic2p')
aic3p <- run_model(sig=c(1,-1), bias=c(0,0), dat=dat2.mat,modname = 'aic3p')
aic4p <- run_model(sig=c(5,-1), bias=c(0,0),
rep(list(c(1,4,8,12,16, 20)),2), ## age knots
dat=dat2.mat,modname = 'aic4p')
aicsp <- c(aic1p, aic2p, aic3p, aic4p)
aicsp-min(aicsp)
which.min(aicsp)
which.min(aics) ## this is the single sigma and bias term
aics
aics <- c(aic1, aic2, aic3, aic4, aic5, aic6)
aics-min(aics)
## To simplify code a bit write a quick wrapper fn
run_model <- function(sig, bias, knotages=NULL, dat=dat.mat, modname = 'mod1'){
## Dummy values when not using feature
if(is.null(knotages)) knotages <- rep(list(c(2,8, 15,25)), times=length(sig))
savehere = here("data", "ageing_error","real_data", modname)
dir.create(savehere)
RunFn(Data=dat,
SigOpt=sig, BiasOpt=bias, KnotAges=knotages,
NDataSets=1, MinAge=1, MaxAge=29, RefAge=10,
MinusAge=1, PlusAge=21,
# SaveFile='real_data',
SaveFile=savehere,
AdmbFile= here("data", "ageing_error"),
# AdmbFile=system.file("executables", package="nwfscAgeingError"),
EffSampleSize=0)
# setwd("c:/Users/cole.monnahan/Work/assessments/GOA_flathead/2021_GOA_flathead/ageing_error")
aic <- calc.aic(here("data","ageing_error",'real_data'), dat)
PlotOutputFn(Data = dat2.mat, MaxAge = 29,
SaveFile = savehere,  PlotType = "PNG")
return(aic)
}
# if(!exists(dir(here("data","ageing_error",'real_data'))) dir.create("real_data", showWarnings=FALSE)
## Full bias and sigma terms
aic1 <- run_model(sig=rep(2, n.readers), bias=rep(2, n.readers),modname = 'aic1')
aic1
aic2 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=rep(2, n.readers),modname = 'aic2')
aic2
savehere
run_model <- function(sig, bias, knotages=NULL, dat=dat.mat, modname = 'mod1'){
## Dummy values when not using feature
if(is.null(knotages)) knotages <- rep(list(c(2,8, 15,25)), times=length(sig))
savehere = here("data", "ageing_error","real_data", modname)
dir.create(savehere)
RunFn(Data=dat,
SigOpt=sig, BiasOpt=bias, KnotAges=knotages,
NDataSets=1, MinAge=1, MaxAge=29, RefAge=10,
MinusAge=1, PlusAge=21,
# SaveFile='real_data',
SaveFile=savehere,
AdmbFile= here("data", "ageing_error"),
# AdmbFile=system.file("executables", package="nwfscAgeingError"),
EffSampleSize=0)
# setwd("c:/Users/cole.monnahan/Work/assessments/GOA_flathead/2021_GOA_flathead/ageing_error")
aic <- calc.aic(here(savehere,dat))
PlotOutputFn(Data = dat2.mat, MaxAge = 29,
SaveFile = savehere,  PlotType = "PNG")
return(aic)
}
# if(!exists(dir(here("data","ageing_error",'real_data'))) dir.create("real_data", showWarnings=FALSE)
## Full bias and sigma terms
aic1 <- run_model(sig=rep(2, n.readers), bias=rep(2, n.readers),modname = 'aic1')
aic1
here(savehere,dat)
savehere = here("data", "ageing_error","real_data", modname)
modname = 'mod1'
modname = 'aic1'
savehere = here("data", "ageing_error","real_data", modname)
here(savehere,dat)
savehere
here(savehere,'agemat.dat')
?
calc.aic
calc.aic
calc.aic(here("data","ageing_error",'real_data'), dat)
dat
calc.aic(savehere, dat)
savehere
calc.aic
RunFile = savehere
file.path(RunFile, "agemat.par")
savehere
Df <- as.numeric(scan(file.path(RunFile, "agemat.par"), comment.char = "%", what = "character",
quiet = TRUE)[6])
Nll <- as.numeric(scan(file.path(RunFile, "agemat.par"), comment.char = "%", what = "character",
quiet = TRUE)[11])
n <- sum(ifelse(dat[, -1] == -999, 0, 1))
Aic <- 2 * Nll + 2 * Df
Aicc <- Aic + 2 * Df * (Df + 1)/(n - Df - 1)
Aicc
savehere
Df
Nll
n
n <- sum(ifelse(dat[, -1] == -999, 0, 1))
Aic <- 2 * Nll + 2 * Df
Aicc <- Aic + 2 * Df * (Df + 1)/(n - Df - 1)
AICC
Aicc
n
dat[, -1]
dat[, -1] == -999
sum(is.na(dat))
## Read in and prep the data
dat <- read.csv(here("data","ageing_error",'all goa flathead sole.csv')) %>%
select(fish_id, year=collection_year,
type=collection_type,
length, weight, sex,
read_age, test_age, reader_name, tester_name)
## Some basic filtering of missing (no tester) and one outlier
dat <- filter(dat, !is.na(test_age) & !is.na(read_age))
dat <- filter(dat, fish_id!=551023)
## Quick plots for QA.
ggplot(dat, aes(read_age, length)) + geom_point() + stat_smooth()
ggplot(dat, aes(read_age, weight)) + geom_point() + stat_smooth()
ggplot(dat, aes(read_age, read_age-test_age, color=tester_name)) +
geom_jitter(alpha=.5) + facet_wrap('reader_name') + stat_smooth()
dat %>% group_by(reader_name) %>% summarize(reads=n()) %>%
arrange(desc(reads))
dat %>% group_by(tester_name) %>% summarize(reads=n())
table(dat$reader_name, dat$tester_name)
## Wrangle this into wide format needed for the model
## input. First drop and rename some columns to make this a bit
## easier
dat.long <- select(dat, -length, -weight, -type, -sex, -year,
age_reader1=read_age, age_reader2=test_age,
name_reader1=reader_name, name_reader2=tester_name)
## Then combine the two reads into long format
dat.long <- dat.long %>%
pivot_longer(!fish_id,
names_to=c(".value", "reader"),
names_sep="_")
## Now cast it wider again, where -999 is the ADMB code for no
## read. This is now a row for each fish, with columns for each
## potential reader, and values are the ages.
dat.wide <- pivot_wider(dat.long, fish_id, names_from='name',
values_from='age',
values_fill=-999) %>% clean_names
## Sum duplicate rows b/c that's needed by model. Drop fish_id now.
dat.mat <- dat.wide[,-1] %>% janitor::get_dupes(everything()) %>%
## Rearrange columns.
select(dupe_count, everything())
## Drop duplicates and convert to matrix. This is final data set
dat.mat <- dat.mat[!duplicated(dat.mat),] %>% as.matrix
### ------------------------------------------------------------
### Repeat this but collapse down into two readers, essentially
### assuming that all readers are equivalent and unbiased
dat2.wide <- pivot_wider(dat.long, fish_id, names_from='reader',
values_from='age')
## Sum duplicate rows b/c that's needed by model. Drop fish_id now.
dat2.mat <- dat2.wide[,-1] %>% janitor::get_dupes(everything()) %>%
## Rearrange columns.
select(dupe_count, everything())
## Drop duplicates and convert to matrix. This is final dat2a set
dat2.mat <- dat2.mat[!duplicated(dat2.mat),] %>% as.matrix
n.readers <- ncol(dat.mat)-1
## To simplify code a bit write a quick wrapper fn
run_model <- function(sig, bias, knotages=NULL, dat=dat.mat, modname = 'mod1'){
## Dummy values when not using feature
if(is.null(knotages)) knotages <- rep(list(c(2,8, 15,25)), times=length(sig))
savehere = here("data", "ageing_error","real_data", modname)
dir.create(savehere)
RunFn(Data=dat,
SigOpt=sig, BiasOpt=bias, KnotAges=knotages,
NDataSets=1, MinAge=1, MaxAge=29, RefAge=10,
MinusAge=1, PlusAge=21,
# SaveFile='real_data',
SaveFile=savehere,
AdmbFile= here("data", "ageing_error"),
# AdmbFile=system.file("executables", package="nwfscAgeingError"),
EffSampleSize=0)
# setwd("c:/Users/cole.monnahan/Work/assessments/GOA_flathead/2021_GOA_flathead/ageing_error")
aic <- calc.aic(savehere, dat)
PlotOutputFn(Data = dat2.mat, MaxAge = 29,
SaveFile = savehere,  PlotType = "PNG")
aic
}
(
# if(!exists(dir(here("data","ageing_error",'real_data'))) dir.create("real_data", showWarnings=FALSE)
## Full bias and sigma terms
aic1 <- run_model(sig=rep(2, n.readers), bias=rep(2, n.readers),modname = 'aic1')
aic1
## Single sigma term, full bias
aic2 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=rep(2, n.readers),modname = 'aic2')
aic2
# if(!exists(dir(here("data","ageing_error",'real_data'))) dir.create("real_data", showWarnings=FALSE)
## Full bias and sigma terms
aic1 <- run_model(sig=rep(2, n.readers), bias=rep(2, n.readers),modname = 'aic1')
## Single sigma term, full bias
aic2 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=rep(2, n.readers),modname = 'aic2')
## Single bias term, full sigma
aic3 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=rep(2, n.readers),modname = 'aic3')
## Single sigma and bias term
aic4 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),modname = 'aic4')
## Single sigma and no bias term but with spline
aic5 <- run_model(sig=c(5,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=c(0,-1,-2,-3,-4,-5,-6,-7,-8,-9),
knotages=rep(list(c(1,4,8,12,16)),10),modname = 'aic5')
## Ian S recommends no bias and pooled readers
## Single sigma and bias term
aic6 <- run_model(sig=c(2,-1,-2,-3,-4,-5,-6,-7,-8,-9),
bias=c(0,-1,-2,-3,-4,-5,-6,-7,-8,-9),modname = 'aic6')
aics <- c(aic1, aic2, aic3, aic4, aic5, aic6)
aics-min(aics)
which.min(aics) ## this is the single sigma and bias term
### This uses the pooled data
aic1p <- run_model(sig=c(2,-1), bias=c(2,-1), dat=dat2.mat,modname = 'aic1p')
aic2p <- run_model(sig=c(2,-1), bias=c(0,0), dat=dat2.mat,modname = 'aic2p')
aic3p <- run_model(sig=c(1,-1), bias=c(0,0), dat=dat2.mat,modname = 'aic3p')
aic4p <- run_model(sig=c(5,-1), bias=c(0,0),
rep(list(c(1,4,8,12,16, 20)),2), ## age knots
dat=dat2.mat,modname = 'aic4p')
aicsp <- c(aic1p, aic2p, aic3p, aic4p)
aicsp-min(aicsp)
which.min(aicsp)
aicsp
m0_0 <- SS_output(here('model_runs','m0_0'), covar=TRUE, verbose=FALSE, printstats=FALSE)
require(r4ss)
require(here)
require(tidyverse)
m0_0 <- SS_output(here('model_runs','m0_0'), covar=TRUE, verbose=FALSE, printstats=FALSE)
m0_0$age_error_mean
m0_0$age_error_sd
t(m0_0$age_error_sd)
data.frame(t(m0_0$age_error_sd))
SSplotAgeMatrix(m0_0)
m0_0$age_error_sd
with(m0_0$age_error_sd plot( type1 ~ age))
with(m0_0$age_error_sd, plot( type1 ~ age))
with(m0_0$age_error_sd, plot( type1 ~ age), pch = 19, col =  'grey')
with(m0_0$age_error_sd, plot( type1 ~ age, pch = 19, col =  'grey'))
with(m0_0$age_error_sd, plot( type1 ~ age, pch = 19, col =  'grey22'))
# data.frame(t(m0_0$age_error_sd))
read.csv(here("ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv"))
here("ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv")
# data.frame(t(m0_0$age_error_sd))
read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv"))
# data.frame(t(m0_0$age_error_sd))
newerr <- read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv")) %>%
pivot_longer()
# data.frame(t(m0_0$age_error_sd))
newerr <- read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv")) %>%
melt()
# data.frame(t(m0_0$age_error_sd))
newerr <- read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv")) %>%
reshape2::melt()
newerr
read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv"))
read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv")) %>%
reshape2::melt()
read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv")) %>%
pivot_longer()
?pivot_longer
# data.frame(t(m0_0$age_error_sd))
newerr <- read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv")) %>%
pivot_longer(., names_to = 'AGE')
read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv"))
# data.frame(t(m0_0$age_error_sd))
newerr <- read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv")) %>%
pivot_longer(., names_to = 'AGE', cols = everything())
t(read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv")))
# data.frame(t(m0_0$age_error_sd))
newerr <- t(read.csv(here("data","ageing_error", "real_data", "aic2p", "ss_format_reader 1.csv"))) %>%
data.frame()
newerr
names(newerr) <- newerr[1,]
newerr
newerr <- newerr[-1,]
newerr
with(m0_0$age_error_sd, plot( type1 ~ age, pch = 19, col =  'grey22'))
with(newerr, points( SD ~True_Age, pch = 19, col =  'grey22'))
with(m0_0$age_error_sd, plot( type1 ~ age, pch = 19, col =  'grey22'))
with(newerr, points( SD ~True_Age, pch = 19, col =  'blue', add = T))
with(m0_0$age_error_sd, plot( type1 ~ age, pch = 19, col =  'grey22', ylim = c(0,3)))
with(m0_0$age_error_sd, plot( type1 ~ age, pch = 19, col =  'grey22', ylim = c(0,3)))
with(newerr, points( SD ~True_Age, pch = 19, col =  'blue', add = T))
legend('topleft', legend = c('old matrix (BSAI)', 'new matrix (AIC)'),
cols = c('grey22','blue'), pch = 19)
with(m0_0$age_error_sd, plot( type1 ~ age, pch = 19, col =  'grey22', ylim = c(0,3)))
with(newerr, points( SD ~True_Age, pch = 19, col =  'blue', add = T))
legend('topleft', legend = c('old matrix (BSAI)', 'new matrix (AIC)'),
colors = c('grey22','blue'), pch = 19)
?legend
with(m0_0$age_error_sd, plot( type1 ~ age, pch = 19, col =  'grey22', ylim = c(0,3)))
with(newerr, points( SD ~True_Age, pch = 19, col =  'blue', add = T))
legend('topleft',
legend = c('old matrix (BSAI)', 'new matrix (AIC)'),
col = c('grey22','blue'), pch = 19)
ggplot(out, aes(expected_age, CV, color=reader)) + geom_line()
## Do some manual processing of selected model
## assuming since this defaults to last this is the fourth, pooled data model?
xx <- readLines( here("data", "ageing_error","real_data","aic2p","AGEMAT.rep"))
l1 <- grep("Reader Age CV SD Expected age", xx)+1
l2 <- grep("Estimated age-structure by data set", xx)-2
out <- do.call(rbind, strsplit(xx[l1:l2], ' ')) %>% as.data.frame %>%
mutate_if(is.character, as.numeric) %>%
setNames(c('reader', 'age', 'CV', 'SD', 'expected_age')) %>%
mutate(reader=as.factor(reader)) %>%
filter(expected_age<25)
ggplot(out, aes(expected_age, age-expected_age,
color=reader, fill=reader,
ymin=age-SD-expected_age,
ymax=age+SD-expected_age))+
geom_line() +
geom_ribbon(alpha=.3) +
coord_cartesian(ylim=c(-10,10))
ggplot(out, aes(expected_age, CV, color=reader)) + geom_line()
p1 <- ggplot(out, aes(expected_age, age-expected_age,
color=reader, fill=reader,
ymin=age-SD-expected_age,
ymax=age+SD-expected_age))+
geom_line() +
geom_ribbon(alpha=.3) +
coord_cartesian(ylim=c(-10,10))
p2 <- ggplot(out, aes(expected_age, CV, color=reader)) + geom_line()
ggsave(p1 | p2,
here("data", "ageing_error","real_data","aic2p","compplots.png"))
require(patchwork)
ggsave(p1 | p2,
here("data", "ageing_error","real_data","aic2p","compplots.png"))
ggsave(p1 | p2,
file = here("data", "ageing_error","real_data","aic2p","compplots.png"))
knitr::include_graphics(here("data", "ageing_error","real_data","aic2p","compplots.png"))
## load 2017 model and fully converted model separately
m0_0 <- SS_output(here('model_runs','m0_0'), covar=TRUE, verbose=FALSE, printstats=FALSE)
m2017 <- SS_output(here('model_runs','2017-mod'), covar=TRUE, verbose=FALSE, printstats=FALSE)
m0_4 <- SS_output(here('model_runs','01_bridging','cole','m04_update_ageing_error'))
SSplotComparisons(SSsummarize(list(m2017,m0_0,m0_4)),  uncertainty=TRUE, subplot = 1, legendlabels = models)
models = c('3.24U (2017)','3.30_converted','3.30_newAgeErr')
SSplotComparisons(SSsummarize(list(m2017,m0_0,m0_4)),  uncertainty=TRUE, subplot = 1, legendlabels = models)
SSplotComparisons(SSsummarize(list(m2017,m0_0,m0_4)),  uncertainty=TRUE, subplot = 13, legendlabels = models)
SS_plots(m0_4)
knitr::include_graphics(here('model_runs','01_bridging','cole','m04_update_ageing_error',
"comp_condAALfit_Andre_plotsflt2mkt0_page3.png"))
knitr::include_graphics(here('model_runs','01_bridging','cole','m04_update_ageing_error',
"plots",
"comp_condAALfit_Andre_plotsflt2mkt0_page3.png"))
knitr::include_graphics(here('model_runs','01_bridging','cole','m04_update_ageing_error',
"plots",
"comp_condAALfit_Andre_plotsflt2mkt0_page4.png"))
knitr::include_graphics(here('model_runs','01_bridging','cole','m04_update_ageing_error',
"plots",
"comp_condAALfit_Andre_plotsflt2mkt0_page2.png"))
models = c('3.24U (2017)','3.30_converted','3.30_newAgeErr')
m0_4 <- SS_output(here('model_runs','01_bridging','cole','m04_update_ageing_error'))
# SS_plots(m0_4)
SSplotComparisons(SSsummarize(list(m2017,m0_0,m0_4)),  uncertainty=TRUE, subplot = 1, legendlabels = models)
knitr::include_graphics(here('model_runs','01_bridging','cole','m04_update_ageing_error',
"plots",
"comp_condAALfit_Andre_plotsflt2mkt0_page2.png"))
knitr::include_graphics(here('model_runs','01_bridging','cole','m04_update_ageing_error',
"plots",
"comp_condAALfit_Andre_plotsflt2mkt0_page3.png"))
knitr::include_graphics(here('model_runs','01_bridging','cole','m04_update_ageing_error',
"plots",
"comp_condAALfit_Andre_plotsflt2mkt0_page2.png"))
knitr::include_graphics(here('model_runs','01_bridging','cole','m04_update_ageing_error',
"plots",
"comp_condAALfit_Andre_plotsflt2mkt0_page3.png"))
knitr::include_graphics(here('model_runs','01_bridging','cole','m04_update_ageing_error',
"plots",
"comp_condAALfit_Andre_plotsflt2mkt0_page2.png"))
knitr::include_graphics(here('model_runs','01_bridging','cole','m04_update_ageing_error',
"plots",
"comp_condAALfit_Andre_plotsflt2mkt0_page3.png"))
m0_3 <- SS_output(here('model_runs','m0_3'), covar=TRUE, verbose=FALSE, printstats=FALSE)
# SS_plots(m0_3,   png = T, dir =   here('model_runs','m0_3'))
#   SSplotComparisons(SSsummarize(list(m0_0,m0_1,m0_2,m0_3)),  plot = FALSE, png = T, plotdir = here('model_runs','m0_3'), uncertainty=TRUE,  legendlabels = models)
# Packages and RODBC setup ----
require(RODBC)
require(dplyr)
require(tidyverse)
require(here)
require(ggplot2); require(ggsidekick)
require(r4ss)
require(reshape2)
require(rstudioapi) ## enables ma
username_AFSC <- showPrompt(title="Username", message="Enter your AFSC username:", default="")
password_AFSC <- askForPassword(prompt="Enter your AFSC password:")
sp_area <- "'GOA'"
species = "10200"
species = 10200
#** survey marginal ages [as ghost] ----
#GOA marginal age comps (include so that you can see the ghosted fits in r4ss output)
# source("C:\\GitProjects\\newsbss\\Get_GOA_Survey_AgeComposition.R")
MyQuery<-paste0("SELECT GOA.AGECOMP_TOTAL.SURVEY,\n ",
"GOA.AGECOMP_TOTAL.SURVEY_YEAR,\n ",
"GOA.AGECOMP_TOTAL.SPECIES_CODE,\n ",
"GOA.AGECOMP_TOTAL.AGE,\n ",
"GOA.AGECOMP_TOTAL.SEX,\n ",
"GOA.AGECOMP_TOTAL.AGEPOP\n",
"FROM GOA.AGECOMP_TOTAL\n ",
"WHERE GOA.AGECOMP_TOTAL.SURVEY     =", sp_area,"\n ",
"AND GOA.AGECOMP_TOTAL.SPECIES_CODE = ",species)
goa_marginal_age_raw <-sqlQuery(AFSC,MyQuery)
AFSC <- odbcConnect("AFSC",username_AFSC,password_AFSC,  believeNRows = FALSE)
goa_marginal_age_raw <-sqlQuery(AFSC,MyQuery)
summary(goa_marginal_age_raw)
goa_marginal_age_raw%>%filter(SURVEY_YEAR==2019) %>% View()
require(r4ss)
require(here)
require(tidyverse)
## load 2017 model and fully converted model separately
m0_0 <- SS_output(here('model_runs','m0_0'), covar=TRUE, verbose=FALSE, printstats=FALSE)
## load 2017 model and fully converted model separately
m0_0 <- SS_output(here('model_runs','m0_0'), covar=TRUE, verbose=FALSE, printstats=FALSE)
m2017 <- SS_output(here('model_runs','2017-mod'), covar=TRUE, verbose=FALSE, printstats=FALSE)
ss_plots(m0_0)
SS_plots(m0_0)
?SSplotComps
