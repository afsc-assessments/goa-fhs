goa_lcomp_expand %>%
group_by(YEAR) %>%
## denominator is total number of samples this year
summarise(nsamp = sum(nobs)),
by = c('YEAR'))
goa_lcomp_freq <- merge(goa_lcomp_expand,
goa_lcomp_expand %>%
group_by(YEAR) %>%
## denominator is total number of samples this year
summarise(nsamp = sum(nobs)),
by = c('YEAR')) %>%
## calculate frequencies
mutate(freq = nobs/nsamp,
variable = ifelse(variable == 'FEMALES', 1, 2)) %>%
select(-nobs, -nsamp)
goa_lcomp_freq %>% filter(YEAR == 2015)
goa_lcomp_freq %>% group_by(YEAR, variable, BIN ) %>%
summarise(n())
goa_lcomp_freq %>%
group_by(YEAR, variable, BIN ) %>%
filter(YEAR == 2015)  %>%
summarise(n())
?complete
merge(goa_lcomp_expand,
goa_lcomp_expand %>%
group_by(YEAR) %>%
## denominator is total number of samples this year
summarise(nsamp = sum(nobs)),
by = c('YEAR')) %>%
## calculate frequencies
mutate(freq = nobs/nsamp,
variable = ifelse(variable == 'FEMALES', 1, 2)) %>%
select(-nobs, -nsamp) %>%
## fill with all exta
merge(goa_lcomp_expand,
goa_lcomp_expand %>%
group_by(YEAR) %>%
## denominator is total number of samples this year
summarise(nsamp = sum(nobs)),
by = c('YEAR')) %>%
## calculate frequencies
mutate(freq = nobs/nsamp,
variable = ifelse(variable == 'FEMALES', 1, 2)) %>%
select(-nobs, -nsamp)
## get total number of samples in each year/sex/bin combo
goa_lcomp_freq <- merge(goa_lcomp_expand,
goa_lcomp_expand %>%
group_by(YEAR) %>%
## denominator is total number of samples this year
summarise(nsamp = sum(nobs)),
by = c('YEAR')) %>%
## calculate frequencies
mutate(freq = nobs/nsamp,
variable = ifelse(variable == 'FEMALES', 1, 2)) %>%
select(-nobs, -nsamp) %>%
## fill with all extant data combinations
tidyr::complete(., YEAR, variable, BIN, fill = list(freq =0)) %>%
arrange(., YEAR, BIN, variable) %>%
mutate(freq = ifelse(is.na(freq),0,freq))
goa_lcomp_freq %>%
group_by(YEAR, variable, BIN ) %>%
filter(YEAR == 2015)  %>%
summarise(n())
goa_lcomp_freq %>%
group_by(YEAR, variable, BIN ) %>%
filter(YEAR == 2015)
survey_length_comps <- cbind(frontmatter,
goa_lcomp_freq %>%
filter(variable == 1) %>%
pivot_wider(., id_cols = YEAR, names_from = BIN, values_from = freq) %>%
select(-YEAR),
goa_lcomp_freq %>%
filter(variable == 2) %>%
pivot_wider(., id_cols = YEAR, names_from = BIN, values_from = freq) %>%
select(-YEAR))
survey_length_comps
#* spot check survey lcomps ----
## should be within rounding range
mod17$lendbase %>%
filter(Fleet == 2 & Yr == 2001 & Bin == 10 & Sex == 1) %>%
select(Obs) %>% round(.,4) ==
round(survey_length_comps[7,'10'],4)
mod17$lendbase %>%
filter(Fleet == 2 & Yr == 2001 & Bin == 60 & Sex == 1) %>%
select(Obs) %>% round(.,4) ==
round(survey_length_comps[7,'60'],4)
#* spot check survey lcomps ----
survey_length_comps %>% filter(Yr == 2003)
survey_length_comps
with(subset(goa_lcomp_expand, YEAR == 2003), summary(nobs))
goa_lcomp_expand[is.na(goa_lcomp_expand$nobs),]
## fill NAs with zero
goa_lcomp_expand$nobs[is.na(goa_lcomp_expand$nobs)] <- 0
## get total number of samples in each year/sex/bin combo
goa_lcomp_freq <- merge(goa_lcomp_expand,
goa_lcomp_expand %>%
group_by(YEAR) %>%
## denominator is total number of samples this year
summarise(nsamp = sum(nobs)),
by = c('YEAR')) %>%
## calculate frequencies
mutate(freq = nobs/nsamp,
variable = ifelse(variable == 'FEMALES', 1, 2)) %>%
select(-nobs, -nsamp) %>%
## fill with all extant data combinations, using zeros for unobserved
tidyr::complete(., YEAR, variable, BIN, fill = list(freq =0)) %>%
arrange(., YEAR, BIN, variable) %>%
mutate(freq = ifelse(is.na(freq),0,freq))
goa_lcomp_freq %>%
group_by(YEAR, variable, BIN ) %>%
filter(YEAR == 2015)  %>%
summarise(n())
## get total number of samples in each year/sex/bin combo
goa_lcomp_freq <- merge(goa_lcomp_expand,
goa_lcomp_expand %>%
group_by(YEAR) %>%
## denominator is total number of samples this year
summarise(nsamp = sum(nobs)),
by = c('YEAR')) %>%
## calculate frequencies
mutate(freq = nobs/nsamp,
variable = ifelse(variable == 'FEMALES', 1, 2)) %>%
select(-nobs, -nsamp) %>%
## fill with all extant data combinations, using zeros for unobserved
tidyr::complete(., YEAR, variable, BIN, fill = list(freq =0)) %>%
arrange(., YEAR, BIN, variable) %>%
mutate(freq = ifelse(is.na(freq),0,freq))
survey_length_comps <- cbind(frontmatter,
goa_lcomp_freq %>%
filter(variable == 1) %>%
pivot_wider(., id_cols = YEAR, names_from = BIN, values_from = freq) %>%
select(-YEAR),
goa_lcomp_freq %>%
filter(variable == 2) %>%
pivot_wider(., id_cols = YEAR, names_from = BIN, values_from = freq) %>%
select(-YEAR))
#* spot check survey lcomps ----
survey_length_comps %>% filter(Yr == 2003)
survey_length_comps
View(survey_length_comps)
mod17$lendbase %>%
filter(Fleet == 2 & Yr == 2003 & Bin == 20 & Sex == 1) %>%
select(Obs) %>% round(.,4)
## should be within rounding range
mod17$lendbase %>%
filter(Fleet == 2 & Yr == 2003 & Bin == 20 & Sex == 1) %>%
select(Obs) %>% round(.,4) ==
round(survey_length_comps[8,'20'],4)
mod17$lendbase %>%
filter(Fleet == 2 & Yr == 2015  & Bin == 36 & Sex == 1) %>%
select(Obs) %>% round(.,4) ==
round(survey_length_comps[14,'36'],4)
write.csv(survey_length_comps,file = here('data','comp',paste0(Sys.Date(),'-goa_lengthcomp_forSS.csv')),row.names = FALSE)
models
models = c('2017 Base','+catch', '+survey', '+fish_len','+goa_len','+CAAL')
## m01 = v3.24U and m02 = 3.30_converted above, just loaded individually now
m01 <- m0_0 <- SS_output(here('model_runs','01_bridging','cole','m01_2017_3.24U'), covar=TRUE, verbose=FALSE, printstats=FALSE)
m0_4 <- SS_output(here('model_runs','m0_4'), covar=TRUE, verbose=FALSE, printstats=FALSE)
# SS_plots(m0_4,   png = T, dir =   here('model_runs','m0_4'))
SSplotComparisons(SSsummarize(list(m0_0,m0_1,m0_2,m0_3,m_04)),  plot = FALSE, png = T, plotdir = here('model_runs','m0_4'), uncertainty=TRUE,  legendlabels = models)
models = c('m0_0','m0_0check')
m0_0check <- SS_output(here('model_runs','m0_0check'), covar=TRUE, verbose=FALSE, printstats=FALSE)
SSplotComparisons(SSsummarize(list(m0_0,m0_0check)),  uncertainty=TRUE, subplot = 1, legendlabels = models)
SSplotComparisons(SSsummarize(list(m0_0,m0_0check)),  uncertainty=TRUE, subplot = 11, legendlabels = models)
models = c('2017 Base','+catch', '+survey', '+fish_len','+goa_len','+CAAL')
m0_1 <- SS_output(here('model_runs','m0_1'), covar=TRUE, verbose=FALSE, printstats=FALSE)
# SS_plots(m0_1,    png = T, dir = here('model_runs','m0_1'))
SSplotComparisons(SSsummarize(list(m0_0,m0_1 )),  plot = FALSE, png = T, plotdir = here('model_runs','m0_1'), uncertainty=TRUE,  legendlabels = models)
m0_2 <- SS_output(here('model_runs','m0_2'), covar=TRUE, verbose=FALSE, printstats=FALSE)
# SS_plots(m0_2, png = T, dir = here('model_runs','m0_2'))
SSplotComparisons(SSsummarize(list(m0_0,m0_1,m0_2)),  plot = FALSE, png = T, plotdir = here('model_runs','m0_2'), uncertainty=TRUE,  legendlabels = models)
m0_3 <- SS_output(here('model_runs','m0_3'), covar=TRUE, verbose=FALSE, printstats=FALSE)
# SS_plots(m0_3,   png = T, dir =   here('model_runs','m0_3'))
SSplotComparisons(SSsummarize(list(m0_0,m0_1,m0_2,m0_3)),  plot = FALSE, png = T, plotdir = here('model_runs','m0_3'), uncertainty=TRUE,  legendlabels = models)
knitr::include_graphics(here('model_runs','m0_3','plots','comp_lenfit__aggregated_across_time.png'))
knitr::include_graphics(here('model_runs','m0_3','plots','comp_lenfit_residsflt1mkt0_page2.png'))
m0_4 <- SS_output(here('model_runs','m0_4'), covar=TRUE, verbose=FALSE, printstats=FALSE)
# SS_plots(m0_4,   png = T, dir =   here('model_runs','m0_4'))
SSplotComparisons(SSsummarize(list(m0_0,m0_1,m0_2,m0_3,m_04)),  plot = FALSE, png = T, plotdir = here('model_runs','m0_4'), uncertainty=TRUE,  legendlabels = models)
m0_4 <- SS_output(here('model_runs','m0_4'), covar=TRUE, verbose=FALSE, printstats=FALSE)
# SS_plots(m0_4,   png = T, dir =   here('model_runs','m0_4'))
SSplotComparisons(SSsummarize(list(m0_0,m0_1,m0_2,m0_3,m_04)),  plot = FALSE, png = T, plotdir = here('model_runs','m0_4'), uncertainty=TRUE,  legendlabels = models)
SS_plots(m0_4,   png = T, dir =   here('model_runs','m0_4'))
head(AL_df)
AL_df %>%
filter(SEX != 3) %>%
select(AGE, LENGTH, SEX, WEIGHT) %>%
group_by(AGE, LENGTH, SEX) %>%
summarise(sum(is.na(WEIGHT)))
AL_df %>%
filter(SEX != 3) %>%
sum(!is.na(AGE) & !is.na(LENGTH) & is.na(WEIGHT))
AL_df
AL_df %>%
filter(SEX != 3) %>%
sum(!is.na(AGE) & !is.na(LENGTH) & is.na(WEIGHT))
AL_df %>%
filter(SEX != 3)
AL_df %>%
filter(SEX != 3) %>%
select(AGE, LENGTH, SEX, WEIGHT) %>%
group_by(AGE, LENGTH, SEX) %>%
sum(!is.na(AGE) & !is.na(LENGTH) & is.na(WEIGHT))
AL_df %>%
filter(SEX != 3) %>%
select(AGE, LENGTH, SEX, WEIGHT) %>%
group_by(AGE, LENGTH, SEX)
AL_df %>%
filter(SEX != 3) %>%
select(AGE, LENGTH, SEX, WEIGHT) %>%
group_by(AGE, LENGTH, SEX) %>%
summarise(!is.na(AGE) & !is.na(LENGTH) & is.na(WEIGHT))
tt <- AL_df %>%
filter(SEX != 3) %>%
select(AGE, LENGTH, SEX, WEIGHT)
with(tt, sum(!is.na(AGE) & !is.na(LENGTH) & is.na(WEIGHT)) )
# SS_plots(m0_4,   png = T, dir =   here('model_runs','m0_4'))
SSplotComparisons(SSsummarize(list(m0_0,m0_1,m0_2,m0_3,m0_4)),  plot = FALSE, png = T, plotdir = here('model_runs','m0_4'), uncertainty=TRUE,  legendlabels = models)
mod17$cpue%>% filter(Yr == 2001)
m0_4$cpue%>% filter(Yr == 2001)
## now count the number of observations in each age bin
AL_df_long <- AL_df %>%
BIN_LEN_DATA(.,len_bins = length_bins)   %>%
mutate(lBIN = BIN) %>%select(-BIN) %>%
filter(!is.na(lBIN) & !is.na(aBIN)) %>%
select(YEAR,  WEIGHT, SEX,AGE, aBIN, LENGTH, lBIN) %>%
# filter(YEAR == 1990 & lBIN <22) %>%
group_by(YEAR, SEX, lBIN, aBIN) %>%
## this sums records across sex
summarise(nobs = n()) %>%
# ## fill missing year-length-age combos
arrange(., as.numeric(aBIN))
AL_df_wide_F <-     AL_df_long %>%
filter(SEX == 2) %>% select(-SEX) %>%
pivot_wider(id_cols = c(YEAR,lBIN), names_from =  aBIN, values_from = nobs) %>%
arrange(YEAR, lBIN)
AL_df_wide_M <-  AL_df_long %>%
filter(SEX == 1) %>% select(-SEX) %>%
pivot_wider(id_cols = c(YEAR,lBIN), names_from =  aBIN, values_from = nobs) %>%
arrange(YEAR, lBIN)
goa_caal_obs <- rbind(AL_df_wide_F,AL_df_wide_M) %>% data.frame()
## fill front matter
AL_df_wide <- goa_caal_obs %>%
mutate(month = 7, fleet = 2,
sex = c(rep(1, nrow(AL_df_wide_F)),
rep(2,nrow(AL_df_wide_M))),  part = 0, ageerr = 0,
Lbin_lo = lBIN,  Lbin_hi = lBIN,
Nsamp = c(rowSums(AL_df_wide_F[3:ncol(AL_df_wide_F)],na.rm = T),
rowSums(AL_df_wide_M[3:ncol(AL_df_wide_M)],na.rm = T))) %>%
select(yr=YEAR,month, fleet, sex, part, ageerr,  Lbin_lo, Lbin_hi, Nsamp, everything(), -lBIN  ) %>%
## duplicate columns x sex
cbind(., goa_caal_obs[,3:ncol(goa_caal_obs)])
## overwrite NAs
AL_df_wide[is.na(AL_df_wide)] <- 0
AL_df_wide
dim(AL_df_wide)
## females year 2007 8cm age 1 should have 1 obs and a total nsamp of 3
mod17$condbase %>% filter(Fleet == 2 & Sex == 1 & Yr == 2007 & Lbin_lo  == 8 & Bin == 1) %>%
mutate(obs2 = round(Obs*Nsamp_in,0)) %>%
select(Yr, Sex, Nsamp_in, Lbin_lo, Bin, obs2)
subset(AL_df_wide,yr == 2007 & sex == 1 &  Lbin_lo  == 8)
mod17$condbase %>% filter(Fleet == 2 & Sex == 2 & Yr == 2015
& Bin == 5
& Lbin_lo  == 24
) %>%
mutate(obs2 = round(Obs*Nsamp_in,0)) %>%
select(Yr, Sex, Nsamp_in, Lbin_lo, Bin, obs2)
subset(AL_df_wide,yr == 2015 & sex == 2 &  Lbin_lo  == 24)
## disable data before 1990;
# the 1984 and 1987 GOA surveys used a different sampling scheme
## and data from those years have been taken out of lots of assessments at this point
AL_df_wide$fleet[AL_df_wide$yr < 1990] <- -2
write.csv(Final.df,file = here('data','comp',paste0(Sys.Date(),'-goa_CAAL_forSS.csv')),row.names = FALSE)
write.csv(AL_df_wide,file = here('data','comp',paste0(Sys.Date(),'-goa_CAAL_forSS.csv')),row.names = FALSE)
here('data','comp',paste0(Sys.Date(),'-goa_CAAL_forSS.csv')
)
m0_5 <- SS_output(here('model_runs','m0_5'), covar=TRUE, verbose=FALSE, printstats=FALSE)
SS_plots(m0_5,   png = T, dir =   here('model_runs','m0_5'))
SS_plots(m0_5,   png = T, dir =   here('model_runs','m0_5'))
SSplotComparisons(SSsummarize(list(m0_0,m0_1,m0_2,m0_3,m0_4,m0_5)),  plot = FALSE, png = T, plotdir = here('model_runs','m0_5'), uncertainty=TRUE,  legendlabels = models)
m0_5$ghostagedbase
m0_5$ghostcondbase
m0_5$ghostlendbase
m0_5$ghostlendbase %>% group_by(Fleet) %>% unique(Yr)
unique(m0_5$ghostlendbase$Yr)
unique(m0_5$ghostlendbase$Fleet)
paste0(unique(m0_5$ghostlendbase$Yr), sep = ",")
paste(unique(m0_5$ghostlendbase$Yr), sep = ",")
paste(unique(m0_5$ghostlendbase$Yr), collapse = ",")
paste(unique(m0_5$ghostlendbase$Yr), collapse = ", ")
paste(unique(m0_3$ghostlendbase$Yr), collapse = ", ")
m0_5$ghostagedbase
unique(m0_5$agedbase$Fleet)
m0_5$agedbase
m0_5$condbase
unique(m0_5$condbase$Fleet)
unique(m0_5$condbase$Used)
#Hauls come separately from above, make sure you're using the right ones
goa_marginals <- merge(FlipComp1.df, nhauls, by.x = 'SURVEY_YEAR', by.y = 'YEAR') %>%
mutate(month = 7, fleet = -2, sex = 3, part = 0, ageerr = 1, Lbin_lo = -1, Lbin_hi = -1 ) %>%
select(yr = SURVEY_YEAR, month, fleet, sex, part, ageerr, Lbin_lo, Lbin_hi, Nsamp= nhaul, everything())
MyQuery<-paste0("SELECT GOA.AGECOMP_TOTAL.SURVEY,\n ",
"GOA.AGECOMP_TOTAL.SURVEY_YEAR,\n ",
"GOA.AGECOMP_TOTAL.SPECIES_CODE,\n ",
"GOA.AGECOMP_TOTAL.AGE,\n ",
"GOA.AGECOMP_TOTAL.SEX,\n ",
"GOA.AGECOMP_TOTAL.AGEPOP\n",
"FROM GOA.AGECOMP_TOTAL\n ",
"WHERE GOA.AGECOMP_TOTAL.SURVEY     =", sp_area,"\n ",
"AND GOA.AGECOMP_TOTAL.SPECIES_CODE = ",species)
AgeComp.df<-sqlQuery(AFSC,MyQuery)
AgeComp.df<-AgeComp.df[AgeComp.df$AGE >=0 & AgeComp.df$SEX <3,]
write.csv(AgeComp.df,file = here('data','comp',paste0(Sys.Date(),"-goa_marginal_agecomp_raw.csv")),row.names = FALSE)
#Bin ages
AgeComp.df<-BIN_AGE_DATA(AgeComp.df,age_bins)
#Make into proportions that sum to 1 over males + females
Ages.df<-aggregate(AGEPOP ~ SURVEY_YEAR + SEX + aBIN,AgeComp.df,sum)
SumAges.df<-aggregate(AGEPOP ~ SURVEY_YEAR,AgeComp.df,sum)
SumAges.df$SumOverA<-SumAges.df$AGEPOP
SumAges.df<-subset(SumAges.df,select = -c(AGEPOP))
Ages.df<-merge(Ages.df,SumAges.df,all=TRUE)
Ages.df$Proportion<-Ages.df$AGEPOP/Ages.df$SumOverA
Ages.df<-subset(Ages.df,select = -c(SumOverA,AGEPOP))
#Flip to SS format
Ages.df$SexNum<-as.numeric(Ages.df$SEX==1) #males
Ages.df$SexAge<-as.numeric(paste0(Ages.df$SexNum,0,Ages.df$aBIN))
FlipComp1.df<-dcast(Ages.df,SURVEY_YEAR ~ SexAge,sum,value.var = "Proportion") #this isn't really summing anything, or shouldn't be. Just transposing. Function is not at all straightforward
nms<-c(AgeBins,paste0("10",AgeBins))
Missing<-setdiff(nms,names(FlipComp1.df))
FlipComp1.df[Missing]<-0
FlipComp1.df<-FlipComp1.df[,c("SURVEY_YEAR",nms)]
#Hauls come separately from above, make sure you're using the right ones
goa_marginals <- merge(FlipComp1.df, nhauls, by.x = 'SURVEY_YEAR', by.y = 'YEAR') %>%
mutate(month = 7, fleet = -2, sex = 3, part = 0, ageerr = 1, Lbin_lo = -1, Lbin_hi = -1 ) %>%
select(yr = SURVEY_YEAR, month, fleet, sex, part, ageerr, Lbin_lo, Lbin_hi, Nsamp= nhaul, everything())
write.csv(goa_marginals,file = here('data','comp',paste0(Sys.Date(),"-goa_marginal_agecomp_forSS.csv")),row.names = FALSE)
MyQuery<-paste0("SELECT GOA.AGECOMP_TOTAL.SURVEY,\n ",
"GOA.AGECOMP_TOTAL.SURVEY_YEAR,\n ",
"GOA.AGECOMP_TOTAL.SPECIES_CODE,\n ",
"GOA.AGECOMP_TOTAL.AGE,\n ",
"GOA.AGECOMP_TOTAL.SEX,\n ",
"GOA.AGECOMP_TOTAL.AGEPOP\n",
"FROM GOA.AGECOMP_TOTAL\n ",
"WHERE GOA.AGECOMP_TOTAL.SURVEY     =", sp_area,"\n ",
"AND GOA.AGECOMP_TOTAL.SPECIES_CODE = ",species)
AgeComp.df<-sqlQuery(AFSC,MyQuery)
AgeComp.df<-AgeComp.df[AgeComp.df$AGE >=0 & AgeComp.df$SEX <3,]
#Bin ages
AgeComp.df<-BIN_AGE_DATA(AgeComp.df,age_bins)
age_bins
AgeComp.df
AgeComp.df
sp_area
species
#** survey marginal ages [as ghost] ----
#GOA marginal age comps (include so that you can see the ghosted fits in r4ss output)
# source("C:\\GitProjects\\newsbss\\Get_GOA_Survey_AgeComposition.R")
MyQuery<-paste0("SELECT GOA.AGECOMP_TOTAL.SURVEY,\n ",
"GOA.AGECOMP_TOTAL.SURVEY_YEAR,\n ",
"GOA.AGECOMP_TOTAL.SPECIES_CODE,\n ",
"GOA.AGECOMP_TOTAL.AGE,\n ",
"GOA.AGECOMP_TOTAL.SEX,\n ",
"GOA.AGECOMP_TOTAL.AGEPOP\n",
"FROM GOA.AGECOMP_TOTAL\n ",
"WHERE GOA.AGECOMP_TOTAL.SURVEY     =", sp_area,"\n ",
"AND GOA.AGECOMP_TOTAL.SPECIES_CODE = ",species)
AgeComp.df<-sqlQuery(AFSC,MyQuery)
AgeComp.df
username_AFSC <- showPrompt(title="Username", message="Enter your AFSC username:", default="")
password_AFSC <- askForPassword(prompt="Enter your AFSC password:")
AFSC <- odbcConnect("AFSC",username_AFSC,password_AFSC,  believeNRows = FALSE)
library(readr)
goa_marginal_age_raw <- read_csv("data/comp/raw/2022-04-21-goa_marginal_agecomp_raw.csv")
#Bin ages
AgeComp.df<-BIN_AGE_DATA(goa_marginal_age_raw,age_bins)
#Make into proportions that sum to 1 over males + females
Ages.df<-aggregate(AGEPOP ~ SURVEY_YEAR + SEX + aBIN,AgeComp.df,sum)
SumAges.df<-aggregate(AGEPOP ~ SURVEY_YEAR,AgeComp.df,sum)
SumAges.df$SumOverA<-SumAges.df$AGEPOP
SumAges.df<-subset(SumAges.df,select = -c(AGEPOP))
Ages.df<-merge(Ages.df,SumAges.df,all=TRUE)
Ages.df$Proportion<-Ages.df$AGEPOP/Ages.df$SumOverA
Ages.df<-subset(Ages.df,select = -c(SumOverA,AGEPOP))
#Flip to SS format
Ages.df$SexNum<-as.numeric(Ages.df$SEX==1) #males
Ages.df$SexAge<-as.numeric(paste0(Ages.df$SexNum,0,Ages.df$aBIN))
FlipComp1.df<-dcast(Ages.df,SURVEY_YEAR ~ SexAge,sum,value.var = "Proportion") #this isn't really summing anything, or shouldn't be. Just transposing. Function is not at all straightforward
nms<-c(AgeBins,paste0("10",AgeBins))
Missing<-setdiff(nms,names(FlipComp1.df))
FlipComp1.df[Missing]<-0
nms<-c(AgeBins,paste0("10",age_bins))
nms<-c(age_bins,paste0("10",age_bins))
Missing<-setdiff(nms,names(FlipComp1.df))
FlipComp1.df[Missing]<-0
FlipComp1.df<-FlipComp1.df[,c("SURVEY_YEAR",nms)]
#Hauls come separately from above, make sure you're using the right ones
goa_marginals <- merge(FlipComp1.df, nhauls, by.x = 'SURVEY_YEAR', by.y = 'YEAR') %>%
mutate(month = 7, fleet = -2, sex = 3, part = 0, ageerr = 1, Lbin_lo = -1, Lbin_hi = -1 ) %>%
select(yr = SURVEY_YEAR, month, fleet, sex, part, ageerr, Lbin_lo, Lbin_hi, Nsamp= nhaul, everything())
goa_marginals
write.csv(goa_marginals,file = here('data','comp',paste0(Sys.Date(),"-goa_marginal_agecomp_forSS.csv")),row.names = FALSE)
unique(goa_marginal_age_raw$SURVEY_YEAR)
## load 2017, 2019 years from aging group (storm and ocean explorer are spearate for 2019)
goamarg19 <- rbind(read.csv(here('data','comp','raw','148201901103.csv')),
read.csv(here('data','comp','raw','143201901103.csv')))
goamarg19
names(goa_marginal_age_raw)
names(goamarg19)
head(goa_marginal_age_raw)
head(goamarg19)
rbind(read.csv(here('data','comp','raw','148201701103.csv')),
read.csv(here('data','comp','raw','148201901103.csv')),
read.csv(here('data','comp','raw','143201901103.csv'))) %>%
mutate(SURVEY = 'GOA',SURVEY_YEAR = year(date_collected))
rbind(read.csv(here('data','comp','raw','148201701103.csv')),
read.csv(here('data','comp','raw','148201901103.csv')),
read.csv(here('data','comp','raw','143201901103.csv'))) %>%
mutate(SURVEY = 'GOA',SURVEY_YEAR = lubridate::year(date_collected))
select(SURVEY, SURVEY_YEAR, SPECIES_CODE = species, AGE = age, SEX = sex, AGEPOP = NA) %>%
filter(SEX != 3)
## load 2017, 2019 years from aging group (storm and ocean explorer are spearate for 2019)
goamargplus <- rbind(read.csv(here('data','comp','raw','148201701103.csv')),
read.csv(here('data','comp','raw','148201901103.csv')),
read.csv(here('data','comp','raw','143201901103.csv'))) %>%
mutate(SURVEY = 'GOA',SURVEY_YEAR = lubridate::year(date_collected)) %>%
select(SURVEY, SURVEY_YEAR, SPECIES_CODE = species, AGE = age, SEX = sex, AGEPOP = NA) %>%
filter(SEX != 3)
## load 2017, 2019 years from aging group (storm and ocean explorer are spearate for 2019)
goamargplus <- rbind(read.csv(here('data','comp','raw','148201701103.csv')),
read.csv(here('data','comp','raw','148201901103.csv')),
read.csv(here('data','comp','raw','143201901103.csv'))) %>%
mutate(SURVEY = 'GOA',SURVEY_YEAR = lubridate::year(date_collected)) %>%
select(SURVEY, SURVEY_YEAR, SPECIES_CODE = species, AGE = age, SEX = sex, AGEPOP = NA) %>%
filter(SEX != 3 & AGE >= 0)
rbind(read.csv(here('data','comp','raw','148201701103.csv')),
read.csv(here('data','comp','raw','148201901103.csv')),
read.csv(here('data','comp','raw','143201901103.csv'))) %>%
mutate(SURVEY = 'GOA',SURVEY_YEAR = lubridate::year(date_collected)) %>%
select(SURVEY, SURVEY_YEAR, SPECIES_CODE = species, AGE = age, SEX = sex, AGEPOP = NA) %>%
filter(SEX != 3 & AGE >= 0)
## load 2017, 2019 years from aging group (storm and ocean explorer are spearate for 2019)
goamargplus <- rbind(read.csv(here('data','comp','raw','148201701103.csv')),
read.csv(here('data','comp','raw','148201901103.csv')),
read.csv(here('data','comp','raw','143201901103.csv'))) %>%
mutate(SURVEY = 'GOA',SURVEY_YEAR = lubridate::year(date_collected), AGEPOP = NA) %>%
select(SURVEY, SURVEY_YEAR, SPECIES_CODE = species, AGE = age, SEX = sex, AGEPOP) %>%
filter(SEX != 3 & AGE >= 0)
rbind(goa_marginal_age_raw,goamargplus )
goa_marginal_age_raw <-sqlQuery(AFSC,MyQuery)
goa_marginal_age_raw <- goa_marginal_age_raw[goa_marginal_age_raw$AGE >=0 & goa_marginal_age_raw$SEX <3,] %>%
rbind(.,
## load 2017, 2019 years from aging group (storm and ocean explorer are spearate for 2019)
rbind(read.csv(here('data','comp','raw','148201701103.csv')),
read.csv(here('data','comp','raw','148201901103.csv')),
read.csv(here('data','comp','raw','143201901103.csv'))) %>%
mutate(SURVEY = 'GOA',SURVEY_YEAR = lubridate::year(date_collected), AGEPOP = NA) %>%
select(SURVEY, SURVEY_YEAR, SPECIES_CODE = species, AGE = age, SEX = sex, AGEPOP) %>%
filter(SEX != 3 & AGE >= 0))
write.csv(goa_marginal_age_raw,file = here('data','comp',paste0(Sys.Date(),"-goa_marginal_agecomp_raw.csv")),row.names = FALSE)
#Bin ages
AgeComp.df<-BIN_AGE_DATA(goa_marginal_age_raw,age_bins)
#Make into proportions that sum to 1 over males + females
Ages.df<-aggregate(AGEPOP ~ SURVEY_YEAR + SEX + aBIN,AgeComp.df,sum)
SumAges.df<-aggregate(AGEPOP ~ SURVEY_YEAR,AgeComp.df,sum)
SumAges.df$SumOverA<-SumAges.df$AGEPOP
SumAges.df<-subset(SumAges.df,select = -c(AGEPOP))
Ages.df<-merge(Ages.df,SumAges.df,all=TRUE)
Ages.df$Proportion<-Ages.df$AGEPOP/Ages.df$SumOverA
Ages.df<-subset(Ages.df,select = -c(SumOverA,AGEPOP))
#Flip to SS format
Ages.df$SexNum<-as.numeric(Ages.df$SEX==1) #males
Ages.df$SexAge<-as.numeric(paste0(Ages.df$SexNum,0,Ages.df$aBIN))
FlipComp1.df<-dcast(Ages.df,SURVEY_YEAR ~ SexAge,sum,value.var = "Proportion") #this isn't really summing anything, or shouldn't be. Just transposing. Function is not at all straightforward
nms<-c(age_bins,paste0("10",age_bins))
Missing<-setdiff(nms,names(FlipComp1.df))
FlipComp1.df[Missing]<-0
FlipComp1.df<-FlipComp1.df[,c("SURVEY_YEAR",nms)]
#Hauls come separately from above, make sure you're using the right ones
goa_marginals <- merge(FlipComp1.df, nhauls, by.x = 'SURVEY_YEAR', by.y = 'YEAR') %>%
mutate(month = 7, fleet = -2, sex = 3, part = 0, ageerr = 1, Lbin_lo = -1, Lbin_hi = -1 ) %>%
select(yr = SURVEY_YEAR, month, fleet, sex, part, ageerr, Lbin_lo, Lbin_hi, Nsamp= nhaul, everything())
write.csv(goa_marginals,file = here('data','comp',paste0(Sys.Date(),"-goa_marginal_agecomp_forSS.csv")),row.names = FALSE)
write.csv(goa_marginals,file = here('data','comp',paste0(Sys.Date(),"-goa_marginal_agecomp_forSS.csv")),row.names = FALSE)
goa_marginal_age_raw
unique(goa_marginal_age_raw$SURVEY_YEAR)
goa_marginal_age_raw <-sqlQuery(AFSC,MyQuery)
goa_marginal_age_raw
goa_marginal_age_raw %>% group_by(SURVEY_YEAR) %>% summarise(n())
head(goa_marginal_age_raw )
Ages.df$SexNum
as.numeric(paste0(Ages.df$SexNum,0,Ages.df$aBIN))
Ages.df$SEX
as.numeric(Ages.df$SEX==1)
FlipComp1.df
Ages.df
subset(Ages.df, SURVEY_YEAR == 1996 & SEX == 1)
subset(Ages.df, SURVEY_YEAR == 1996 & SEX == 1 aBIN == 11)
subset(Ages.df, SURVEY_YEAR == 1996 & SEX == 1 & aBIN == 11)
FlipComp1.df
subset(Ages.df, SURVEY_YEAR == 1996 & SEX == 1 & aBIN == 11)
FlipComp1.df[5,]
head(AL_df)
subset(AL_df, YEAR > 2015)
subset(AL_df, YEAR > 2015) %>% View()
m0_5 <- SS_output(here('model_runs','m0_5'), covar=TRUE, verbose=FALSE, printstats=FALSE)
m0_5$ghostagedbase
rm(m0_5)
m0_5 <- SS_output(here('model_runs','m0_5'), covar=TRUE, verbose=FALSE, printstats=FALSE)
m0_5$ghostagedbase
SSplotData(m0_5)
SS_plots(m0_5,   png = T, dir =   here('model_runs','m0_5'))
SSplotData(m0_5)
